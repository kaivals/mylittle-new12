[
  {
    "ContainingType": "mylittle_project.Controllers.FilterController",
    "Method": "GetAll",
    "RelativePath": "api/admin/filters",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.FilterController",
    "Method": "Create",
    "RelativePath": "api/admin/filters",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.CreateFilterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.FilterController",
    "Method": "GetById",
    "RelativePath": "api/admin/filters/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.FilterController",
    "Method": "Update",
    "RelativePath": "api/admin/filters/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.CreateFilterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.FilterController",
    "Method": "Delete",
    "RelativePath": "api/admin/filters/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.FilterController",
    "Method": "GetPaginated",
    "RelativePath": "api/admin/filters/paged",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.AuthController",
    "Method": "ConfirmEmail",
    "RelativePath": "api/Auth/confirm-email",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.AuthController",
    "Method": "Enable2FA",
    "RelativePath": "api/Auth/enable-2fa",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "mylittle_project.Application.DTOs.Enable2FADto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.AuthController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Auth/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "mylittle_project.Application.DTOs.ForgotPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "mylittle_project.Application.DTOs.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/Auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "mylittle_project.Application.DTOs.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/Auth/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "mylittle_project.Application.DTOs.ResetPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.AuthController",
    "Method": "Verify2FA",
    "RelativePath": "api/Auth/verify-2fa",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "mylittle_project.Application.DTOs.TwoFactorDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.BrandController",
    "Method": "GetAll",
    "RelativePath": "api/Brand",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.BrandController",
    "Method": "Create",
    "RelativePath": "api/Brand",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.CreateBrandDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.BrandController",
    "Method": "GetById",
    "RelativePath": "api/Brand/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.BrandController",
    "Method": "Update",
    "RelativePath": "api/Brand/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.UpdateBrandDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.BrandController",
    "Method": "Delete",
    "RelativePath": "api/Brand/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.CategoryController",
    "Method": "Create",
    "RelativePath": "api/Category",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.CreateUpdateCategoryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "mylittle_project.Application.DTOs.CategoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "mylittle_project.Controllers.CategoryController",
    "Method": "GetById",
    "RelativePath": "api/Category/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "mylittle_project.Application.DTOs.CategoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "mylittle_project.Controllers.CategoryController",
    "Method": "Update",
    "RelativePath": "api/Category/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.CreateUpdateCategoryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "mylittle_project.Application.DTOs.CategoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "mylittle_project.Controllers.CategoryController",
    "Method": "Delete",
    "RelativePath": "api/Category/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.CategoryController",
    "Method": "GetFiltered",
    "RelativePath": "api/Category/filter",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filter",
        "Type": "mylittle_project.Application.DTOs.Common.BaseFilterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "mylittle_project.Application.DTOs.PaginatedResult\u00601[[mylittle_project.Application.DTOs.CategoryDto, mylittle-project.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "mylittle_project.Controllers.BuyersController",
    "Method": "Create",
    "RelativePath": "api/dealer/buyers",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.BuyerCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.BuyersController",
    "Method": "GetAll",
    "RelativePath": "api/dealer/buyers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.BuyersController",
    "Method": "Update",
    "RelativePath": "api/dealer/buyers/{buyerId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "buyerId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.BuyerUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.BuyersController",
    "Method": "GetProfile",
    "RelativePath": "api/dealer/buyers/{buyerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "buyerId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.BuyersController",
    "Method": "SoftDelete",
    "RelativePath": "api/dealer/buyers/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.BuyersController",
    "Method": "GetAllUnfiltered",
    "RelativePath": "api/dealer/buyers/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.DealerController",
    "Method": "CreateBusinessInfo",
    "RelativePath": "api/dealer/Dealer",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.DealerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.DealerController",
    "Method": "AddDocumentRequest",
    "RelativePath": "api/dealer/kyc/request",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.KycDocumentRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.DealerController",
    "Method": "GetRequestedDocuments",
    "RelativePath": "api/dealer/kyc/requested/{DealerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "DealerId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.DealerController",
    "Method": "UploadKycDocument",
    "RelativePath": "api/dealer/kyc/upload",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "DealerId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "DocType",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "File",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.DealerController",
    "Method": "AssignDealerSubscription",
    "RelativePath": "api/dealer/subscription/assign",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.DealerSubscriptionDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.DealerController",
    "Method": "AddUser",
    "RelativePath": "api/dealer/user",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.UserDealerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.DealerController",
    "Method": "GetAllUsers",
    "RelativePath": "api/dealer/user",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.DealerController",
    "Method": "GetUsers",
    "RelativePath": "api/dealer/user/{DealerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "DealerId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.DealerController",
    "Method": "AddMultipleUsers",
    "RelativePath": "api/dealer/user/batch",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "users",
        "Type": "System.Collections.Generic.List\u00601[[mylittle_project.Application.DTOs.UserDealerDto, mylittle-project.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.DealerController",
    "Method": "GetPaginatedUsers",
    "RelativePath": "api/dealer/user/paginated",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.DealerController",
    "Method": "GetVirtualNumber",
    "RelativePath": "api/dealer/virtual-number/get/{DealerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "DealerId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.GlobalSubscriptionController",
    "Method": "Get",
    "RelativePath": "api/global-subscriptions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.GlobalSubscriptionController",
    "Method": "Post",
    "RelativePath": "api/global-subscriptions",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.GlobalSubscriptionDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.OrderController",
    "Method": "CreateOrder",
    "RelativePath": "api/Order",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.OrderCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Guid",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.OrderController",
    "Method": "UpdateOrder",
    "RelativePath": "api/Order/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.OrderUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.OrderController",
    "Method": "DeleteOrder",
    "RelativePath": "api/Order/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.OrderController",
    "Method": "GetOrderById",
    "RelativePath": "api/Order/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "mylittle_project.Application.DTOs.OrderDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.OrderController",
    "Method": "GetAllOrders",
    "RelativePath": "api/Order/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[mylittle_project.Application.DTOs.OrderDto, mylittle-project.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.OrderController",
    "Method": "GetPaginatedOrders",
    "RelativePath": "api/Order/filter",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filter",
        "Type": "mylittle_project.Application.DTOs.OrderFilterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "mylittle_project.Application.DTOs.PaginatedResult\u00601[[mylittle_project.Application.DTOs.OrderDto, mylittle-project.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.TenentPortalLinkController",
    "Method": "AddBatch",
    "RelativePath": "api/portal-links/batch",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.TenentPortalLinkBatchDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.TenentPortalLinkController",
    "Method": "GetLinkedPortals",
    "RelativePath": "api/portal-links/linked-portals",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.TenentPortalLinkController",
    "Method": "AddSingle",
    "RelativePath": "api/portal-links/single",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.TenentPortalLinkDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductController",
    "Method": "GetDealerVisibleSections",
    "RelativePath": "api/Product/dealer-visible-sections",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductController",
    "Method": "CreateField",
    "RelativePath": "api/Product/field",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.ProductFieldDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductController",
    "Method": "UpdateField",
    "RelativePath": "api/Product/field/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.ProductFieldDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductController",
    "Method": "DeleteField",
    "RelativePath": "api/Product/field/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductController",
    "Method": "CreateSection",
    "RelativePath": "api/Product/section",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.ProductCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductController",
    "Method": "UpdateSection",
    "RelativePath": "api/Product/section/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.ProductCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductController",
    "Method": "DeleteSection",
    "RelativePath": "api/Product/section/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductController",
    "Method": "GetAllSectionsWithFields",
    "RelativePath": "api/Product/sections",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.WebAPI.Controllers.ProductReviewController",
    "Method": "GetAll",
    "RelativePath": "api/ProductReview",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.WebAPI.Controllers.ProductReviewController",
    "Method": "Create",
    "RelativePath": "api/ProductReview",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.CreateProductReviewDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.WebAPI.Controllers.ProductReviewController",
    "Method": "GetById",
    "RelativePath": "api/ProductReview/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.WebAPI.Controllers.ProductReviewController",
    "Method": "Update",
    "RelativePath": "api/ProductReview/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.UpdateProductReviewDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.WebAPI.Controllers.ProductReviewController",
    "Method": "Delete",
    "RelativePath": "api/ProductReview/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.WebAPI.Controllers.ProductReviewController",
    "Method": "Approve",
    "RelativePath": "api/ProductReview/{id}/approve",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.WebAPI.Controllers.ProductReviewController",
    "Method": "Disapprove",
    "RelativePath": "api/ProductReview/{id}/disapprove",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.WebAPI.Controllers.ProductReviewController",
    "Method": "Verify",
    "RelativePath": "api/ProductReview/{id}/verify",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.WebAPI.Controllers.ProductReviewController",
    "Method": "BulkDelete",
    "RelativePath": "api/ProductReview/bulk-delete",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ids",
        "Type": "System.Collections.Generic.List\u00601[[System.Guid, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductTagController",
    "Method": "GetAll",
    "RelativePath": "api/ProductTag",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductTagController",
    "Method": "Create",
    "RelativePath": "api/ProductTag",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.CreateProductTagDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductTagController",
    "Method": "GetById",
    "RelativePath": "api/ProductTag/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductTagController",
    "Method": "Update",
    "RelativePath": "api/ProductTag/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.UpdateProductTagDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductTagController",
    "Method": "Delete",
    "RelativePath": "api/ProductTag/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.API.Controllers.ProductTagController",
    "Method": "BulkDelete",
    "RelativePath": "api/ProductTag/bulk-delete",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ids",
        "Type": "System.Collections.Generic.List\u00601[[System.Guid, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.LicensingFeatureController",
    "Method": "GetFeatureTree",
    "RelativePath": "api/tenant-feature-settings/{tenantId}/features",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[mylittle_project.Application.DTOs.FeatureModuleDto, mylittle-project.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "mylittle_project.Controllers.LicensingFeatureController",
    "Method": "ToggleFeature",
    "RelativePath": "api/tenant-feature-settings/{tenantId}/features/{featureId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "featureId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "body",
        "Type": "mylittle_project.Controllers.ToggleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.LicensingFeatureController",
    "Method": "ToggleModule",
    "RelativePath": "api/tenant-feature-settings/{tenantId}/modules/{moduleId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "moduleId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "body",
        "Type": "mylittle_project.Controllers.ToggleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.LicensingFeatureController",
    "Method": "GetPortals",
    "RelativePath": "api/tenant-feature-settings/portals",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "mylittle_project.Application.DTOs.PaginatedResult\u00601[[mylittle_project.Application.DTOs.PortalSummaryDto, mylittle-project.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TenantPlanAssignmentController",
    "Method": "Update",
    "RelativePath": "api/TenantPlanAssignment/{assignmentId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "assignmentId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.TenantPlanAssignmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TenantPlanAssignmentController",
    "Method": "Delete",
    "RelativePath": "api/TenantPlanAssignment/{assignmentId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "assignmentId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TenantPlanAssignmentController",
    "Method": "Get",
    "RelativePath": "api/TenantPlanAssignment/{tenantId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TenantPlanAssignmentController",
    "Method": "Add",
    "RelativePath": "api/TenantPlanAssignment/{tenantId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "assignments",
        "Type": "System.Collections.Generic.List\u00601[[mylittle_project.Application.DTOs.TenantPlanAssignmentDto, mylittle-project.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TenantPlanAssignmentController",
    "Method": "GetSchedulerAssignments",
    "RelativePath": "api/TenantPlanAssignment/scheduler/{tenantId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TenantSubscriptionController",
    "Method": "Get",
    "RelativePath": "api/TenantSubscription/{tenantId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TenantSubscriptionController",
    "Method": "UpdatePlans",
    "RelativePath": "api/TenantSubscription/{tenantId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "plans",
        "Type": "System.Collections.Generic.List\u00601[[mylittle_project.Application.DTOs.TenantSubscriptionDto, mylittle-project.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.TenantsController",
    "Method": "GetAllAsync",
    "RelativePath": "api/v1/tenants",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "mylittle_project.Application.DTOs.PaginatedResult\u00601[[mylittle_project.Application.DTOs.TenantDto, mylittle-project.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "mylittle_project.Controllers.TenantsController",
    "Method": "CreateAsync",
    "RelativePath": "api/v1/tenants",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.TenantDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.TenantsController",
    "Method": "GetTenantById",
    "RelativePath": "api/v1/tenants/{tenantId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "mylittle_project.Application.DTOs.TenantDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetTenantById"
  },
  {
    "ContainingType": "mylittle_project.Controllers.TenantsController",
    "Method": "UpdateTenant",
    "RelativePath": "api/v1/tenants/{tenantId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.TenantDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.TenantsController",
    "Method": "GetFeatureTreeAsync",
    "RelativePath": "api/v1/tenants/{tenantId}/features",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[mylittle_project.Application.DTOs.FeatureModuleDto, mylittle-project.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "mylittle_project.Controllers.TenantsController",
    "Method": "ToggleFeatureAsync",
    "RelativePath": "api/v1/tenants/{tenantId}/features/{featureId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "featureId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Controllers.TenantsController\u002BToggleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.TenantsController",
    "Method": "ToggleModuleAsync",
    "RelativePath": "api/v1/tenants/{tenantId}/modules/{moduleId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "moduleId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Controllers.TenantsController\u002BToggleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "mylittle_project.Controllers.TenantsController",
    "Method": "UpdateStoreAsync",
    "RelativePath": "api/v1/tenants/{tenantId}/store",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tenantId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "mylittle_project.Application.DTOs.StoreDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]